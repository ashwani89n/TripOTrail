openapi: 3.0.0
info:
  title: Trip Planner API
  description: API documentation for managing trips, destinations, and activities.
  version: 1.0.0

servers:
  - url: http://localhost:5000
    description: Local Development Server

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Allows users to create an account with their name, email, and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "201":
          description: User registered successfully.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "success"
        "400":
          description: Email already exists.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"
        "500":
          description: Server error.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"

  /auth/login:
    post:
      summary: User Login
      description: Authenticates the user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: Login successful.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "success"
                    user_id:
                      type: string
                      example: "user_12345"
        "400":
          description: Invalid credentials.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"
        "500":
          description: Server error.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"

  /trips:
  # My Trips
    get:
      summary: Fetch user trips categorized as Active, Upcoming, and Past
      description: Retrieves trips based on the user's trip history and status.
      security:
        - bearerAuth: []
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
        example: "user_12345"
      responses:
        "200":
          description: Successfully retrieved trips
          content:
            application/json:
              schema:
                type: object
                properties:
                  trips:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                          enum: ["Active", "Upcoming", "Past"]
                          example: "Upcoming"
                        trip_id:
                          type: string
                          example: "trip_abc123"
                        title:
                          type: string
                          example: "My Europe Adventure"
                        start_point:
                          type: string
                          example: "New York"
                        destination:
                          type: string
                          example: "Paris"
                        start_date:
                          type: string
                          format: date
                          example: "2025-06-10"
                        end_date:
                          type: string
                          format: date
                          example: "2025-06-20"
                        image:
                          type: string
                          format: uri
                          example: "https://google.com/destination_image_from_google_maps_api.png"
                        highlights:
                          type: array
                          items:
                            type: string
                          example: ["image_url_1", "image_url_2"]
                        budget:
                          type: object
                          properties:
                            transport:
                              type: number
                              example: 1400
                            food:
                              type: number
                              example: 500
                            accommodation:
                              type: number
                              example: 600
                            activities:
                              type: number
                              example: 620
                        expense:
                          type: object
                          properties:
                            transport:
                              type: number
                              example: 1400
                            food:
                              type: number
                              example: 500
                            accommodation:
                              type: number
                              example: 600
                            activities:
                              type: number
                              example: 620
                        team_members:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              email:
                                type: string
                                format: email
                                example: "johndoe@example.com"
                              profile_picture:
                                type: string
                                format: uri
                                example: "https://example.com/johndoe_profile.jpg"
            
        "400":
          description: Invalid request parameters.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"
        "401":
          description: Unauthorized request.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"
        "404":
          description: No trips found.
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "error"
    # Plan your Trip
    post:
      summary: Plan your trip
      description: Allows users to create a trip with travel details.
      security:
        - bearerAuth: []
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
        example: "user_12345"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "My Europe Adventure"
                start_point:
                  type: string
                  example: "New York"
                destination:
                  type: string
                  example: "Paris"
                start_date:
                  type: string
                  format: date
                  example: "2025-06-10"
                end_date:
                  type: string
                  format: date
                  example: "2025-06-20"
                outbound_mode_of_transport:
                  type: string
                  enum: ["Road", "Flight"]
                  example: "Flight"
                return_mode_of_transport:
                  type: string
                  enum: ["Road", "Flight"]
                  example: "Flight"
                fuel_budget:
                  type: number
                  example: 0
                  nullable: true
                outbound_flight:
                  type: object
                  nullable: true
                  properties:
                    from:
                      type: string
                      example: "JFK"
                    to:
                      type: string
                      example: "CDG"
                    date:
                      type: string
                      format: date
                      example: "2025-06-10"
                    departure_time:
                      type: string
                      format: time
                      example: "10:30:00"
                    arrival_time:
                      type: string
                      format: time
                      example: "14:45:00"
                    budget:
                      type: number
                      example: 800
                    e_ticket:
                      type: string
                      format: uri
                      example: "https://tripotrail.com/uploads/ticket123.pdf"
                return_flight:
                  type: object
                  nullable: true
                  properties:
                    from:
                      type: string
                      example: "CDG"
                    to:
                      type: string
                      example: "JFK"
                    date:
                      type: string
                      format: date
                      example: "2025-06-20"
                    departure_time:
                      type: string
                      format: time
                      example: "10:30:00"
                    arrival_time:
                      type: string
                      format: time
                      example: "14:45:00"
                    budget:
                      type: number
                      example: 850
                    e_ticket:
                      type: string
                      format: uri
                      example: "https://tripotrail.com/uploads/ticket456.pdf"
      responses:
        "201":
          description: Trip created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  trip_id:
                    type: string
                    example: "trip_abc123"
        "400":
          description: Invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

  /trips/search:
  # My Trips search functionality
    # get:
    #   summary: Search trips based on user input
    #   description: Fetches trips that match the search keyword in the title, start point, or destination.
    #   security:
    #     - bearerAuth: []
    #   parameters:
    #   - name: userId
    #     in: query
    #     required: true
    #     schema:
    #       type: string
    #     example: "user_12345"
    #   - name: query
    #     in: query
    #     required: true
    #     schema:
    #       type: string
    #     example: "Europe"
      # responses:
      #   "200":
      #     description: Successfully retrieved matching trips
      #     content:
      #       application/json:
      #         schema:
      #           type: object
      #           properties:
      #             active_trips:
      #               type: array
      #               items:
      #                 type: object
      #                 properties:
      #                   status:
      #                     type: string
      #                     enum: ["Active", "Upcoming", "Past"]
      #                     example: "Upcoming"
      #                   trip_id:
      #                     type: string
      #                     example: "trip_abc123"
      #                   title:
      #                     type: string
      #                     example: "My Europe Adventure"
      #                   start_point:
      #                     type: string
      #                     example: "New York"
      #                   destination:
      #                     type: string
      #                     example: "Paris"
      #                   start_date:
      #                     type: string
      #                     format: date
      #                     example: "2025-06-10"
      #                   end_date:
      #                     type: string
      #                     format: date
      #                     example: "2025-06-20"
      #                   image:
      #                     type: string
      #                     format: uri
      #                     example: "https://google.com/destination_image_from_google_maps_api.png"
      #                   highlights:
      #                     type: array
      #                     items:
      #                       type: string
      #                     example: ["image_url_1", "image_url_2"]
      #                   budget:
      #                     type: object
      #                     properties:
      #                       transport:
      #                         type: number
      #                         example: 1400
      #                       food:
      #                         type: number
      #                         example: 500
      #                       accommodation:
      #                         type: number
      #                         example: 600
      #                       activities:
      #                         type: number
      #                         example: 620
      #                   expense:
      #                     type: object
      #                     properties:
      #                       transport:
      #                         type: number
      #                         example: 1400
      #                       food:
      #                         type: number
      #                         example: 500
      #                       accommodation:
      #                         type: number
      #                         example: 600
      #                       activities:
      #                         type: number
      #                         example: 620
      #                   team_members:
      #                     type: array
      #                     items:
      #                       type: object
      #                       properties:
      #                         name:
      #                           type: string
      #                           example: "John Doe"
      #                         email:
      #                           type: string
      #                           format: email
      #                           example: "johndoe@example.com"
      #                         profile_picture:
      #                           type: string
      #                           format: uri
      #                           example: "https://example.com/johndoe_profile.jpg"
            
      #   "400":
      #     description: Invalid request parameters.
      #     content:
      #         application/json:
      #           schema:
      #             type: object
      #             properties:
      #               status:
      #                 type: string
      #                 example: "error"
      #   "401":
      #     description: Unauthorized request.
      #     content:
      #         application/json:
      #           schema:
      #             type: object
      #             properties:
      #               status:
      #                 type: string
      #                 example: "error"
      #   "404":
      #     description: No matching trips found.
      #     content:
      #         application/json:
      #           schema:
      #             type: object
      #             properties:
      #               status:
      #                 type: string
      #                 example: "error"


  # Plan your trip: Add destinations along with Budget and Tripmates
  /trips/{tripId}/destinations:
    post:
      summary: Select spots for the trip itinerary
      description: Allows users to choose spots and toggle their inclusion in the trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_time:
                  type: string
                  format: time
                  example: "01:30"
                selected_spots:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "Ripley's Aquarium of the Smokies"
                      address:
                        type: string
                        example: "88 River Rd, Gatlinburg, TN 37738, USA"
                      image:
                        type: string
                        format: uri
                        example: "https://tripotrail.com/uploads/image_from_google_maps_api.png"
                      is_added:
                        type: boolean
                        example: true
                      duration:
                        type: string
                        format: time
                        example: "01:30"
                      cost:
                        type: number
                        example: 120
                budget:
                  type: object
                  properties:
                    transport:
                      type: number
                      example: 1400
                    food:
                      type: number
                      example: 500
                    accommodation:
                      type: number
                      example: 600
                    activities:
                      type: number
                      example: 620
                team_members:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: "John Doe"
                      email:
                        type: string
                        format: email
                        example: "johndoe@example.com"
                      profile_picture:
                        type: string
                        format: uri
                        example: "https://example.com/johndoe_profile.jpg"
                status:
                  type: string
                  enum: ["Unconfirm", "Confirm"]
                  example: "Confirm"
                
                    
      responses:
        "201":
          description: Spots successfully updated in the itinerary
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  optimized_route:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Ripley's Aquarium of the Smokies"
                        address:
                          type: string
                          example: "88 River Rd, Gatlinburg, TN 37738, USA"
                        order:
                          type: integer
                          example: 1
          
        "400":
          description: Invalid data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

# Fetch destinations of the associated trip when user clicks on any of the trips displayed on My Trips screen
    get:
      summary: Get destinations for the trip.
      description: Fetches all destinations associated with a trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          
      responses:
        "200":
          description: List of destinations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  start_time:
                    type: string
                    format: time
                    example: "01:30"
                  selected_spots:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Ripley's Aquarium of the Smokies"
                        address:
                          type: string
                          example: "88 River Rd, Gatlinburg, TN 37738, USA"
                        image:
                          type: string
                          format: uri
                          example: "https://tripotrail.com/uploads/image_from_google_maps_api.png"
                        duration:
                          type: string
                          format: time
                          example: "01:30"
                        cost:
                          type: number
                          example: 120
                  added_expense:
                    type: array
                    items:
                      type: object
                      properties:
                        added_by_name:
                          type: string
                          example: "John Doe"
                        added_by_profile_picture:
                          type: string
                          format: uri
                          example: "https://example.com/johndoe_profile.jpg"
                        category:
                          type: string
                          enum: ["Food","Transport","Accomodation","Activities"]
                          example: "Food"
                        comments:
                          type: string
                          example: "Fuel"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
# Delete trip
  /trips/{tripId}:
    delete:
      summary: Delete a trip
      description: Removes a trip by its ID.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Trip deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
  
  # Fetch or upload images while displaying a specific trip under My Trips 
  /trips/{tripId}/media:
    get:
      summary: Fetch all media for a trip
      description: Retrieves all media (pictures, videos, bills) uploaded for a specific trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
      responses:
        "200":
          description: Successfully retrieved the list of uploaded media
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  media:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        file_type:
                          type: string
                          enum: ["picture", "video", "bill"]
                          example: "picture"
                        url:
                          type: string
                          format: uri
                          example: "https://example.com/media/pic1.jpg"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

    post:
      summary: Upload media (picture, video, bill) for a trip
      description: Uploads a picture, video, or bill to a specific trip. The type of media is specified in the `file_type` field.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload (picture, video, or bill).
                file_type:
                  type: string
                  enum: ["picture", "video", "bill"]
                  description: The type of the uploaded file. Can be one of `picture`, `video`, or `bill`.
      responses:
        "201":
          description: Media successfully uploaded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  media:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      file_type:
                        type: string
                        enum: ["picture", "video", "bill"]
                        example: "bill"
                      url:
                        type: string
                        format: uri
                        example: "https://example.com/media/bill1.pdf"
        "400":
          description: Invalid file type or data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

    /trips/{tripId}/media/{mediaId}:
    delete:
      summary: Delete media
      description: Remove media from the trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
        - name: mediaId
          in: path
          required: true
          schema:
            type: string
          example: "mediaId_67890"
      responses:
        "200":
          description: Media successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Expense or Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

                        
  /trips/{tripId}/expense:
    post:
      summary: Add an expense
      description: Add a new expense for a trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  added_by_name:
                    type: string
                    example: "John Doe"
                  added_by_profile_picture:
                    type: string
                    format: uri
                    example: "https://example.com/johndoe_profile.jpg"
                  category:
                    type: string
                    enum: ["Food", "Transport", "Accomodation", "Activities"]
                    example: "Food"
                  comments:
                    type: string
                    example: "Fuel"
                  expense:
                    type: number
                    example: 100
      responses:
        "201":
          description: Expense successfully uploaded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Invalid file type or data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

    get:
      summary: Get expenses for a trip
      description: Retrieve all expenses for a specific trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
      responses:
        "200":
          description: Expenses retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    added_by_name:
                      type: string
                      example: "John Doe"
                    added_by_profile_picture:
                      type: string
                      format: uri
                      example: "https://example.com/johndoe_profile.jpg"
                    category:
                      type: string
                      enum: ["Food", "Transport", "Accomodation", "Activities"]
                      example: "Food"
                    comments:
                      type: string
                      example: "Fuel"
                    expense:
                      type: number
                      example: 100
        "404":
          description: Expenses not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

  /trips/{tripId}/expense/{expenseId}:
    put:
      summary: Update an expense
      description: Modify an existing expense.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
          example: "expense_67890"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: ["Food", "Transport", "Accomodation", "Activities"]
                  example: "Transport"
                comments:
                  type: string
                  example: "Toll charges"
                expense:
                  type: number
                  example: 100
      responses:
        "200":
          description: Expense successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Expense or Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

    delete:
      summary: Delete an expense
      description: Remove an expense from the trip.
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
          example: "user_12345"
        - name: tripId
          in: path
          required: true
          schema:
            type: integer
          example: 12345
        - name: expenseId
          in: path
          required: true
          schema:
            type: string
          example: "expense_67890"
      responses:
        "200":
          description: Expense successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
        "400":
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "401":
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"
        "404":
          description: Expense or Trip not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "error"

                        
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

